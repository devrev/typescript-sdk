# Heavily borrowed from https://superface.ai/blog/npm-publish-gh-actions-changelog

name: Release package

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type"
        type: choice
        required: true
        options: [patch, minor, prepatch, preminor, prerelease]
      dry-run:
        description: "Skip actual commit and publish"
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Checkout project repository
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.SVC_DEVREV_TOKEN }}

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          registry-url: https://registry.npmjs.org/
          node-version: '18.x'
          scope: '@devrev'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Git configuration
        run: |
          git config --global user.email "svc-devrev-sdk@devrev.ai"
          git config --global user.name "svc-devrev-sdk"

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Commit changes
      - name: Commit package.json changes and create tag
        run: |
          git add "package.json"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Push repository changes
      - name: Push changes to repository
        if: github.event.inputs.dry-run != false
        env:
          GITHUB_TOKEN: ${{ secrets.SVC_DEVREV_TOKEN }}
        run: |
          git push origin && git push --tags

      # Documentation on config options https://github.com/softprops/action-gh-release
      - name: Update GitHub release documentation
        if: github.event.inputs.dry-run != false
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: ${{ env.NEW_VERSION }}
          generate_release_notes: true
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
        env:
          GITHUB_TOKEN: ${{ secrets.SVC_DEVREV_TOKEN }}

      # Publish version to public repository
      - name: Publish
        run: npm publish --verbose --tag ${{ env.RELEASE_TAG }} ${{ env.DRY_RUN }}
        env:
          #NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DRY_RUN: ${{ github.event.inputs.dry-run && '--dry-run' || ' '}}
